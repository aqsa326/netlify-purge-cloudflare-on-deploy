import os
import socket
import requests
from dotenv import load_dotenv

load_dotenv()

DOMAIN = "thefortressapp.com"
ABUSE_API_KEY = os.getenv("ABUSEIPDB_API_KEY")
CF_ZONE_ID = os.getenv("CLOUDFLARE_ZONE_ID")
CF_API_TOKEN = os.getenv("CLOUDFLARE_API_TOKEN")

def check_blocklists():
    try:
        ip = socket.gethostbyname(DOMAIN)
        print(f"üîç Checking blocklists for IP: {ip}")
        headers = {
            "Key": ABUSE_API_KEY,
            "Accept": "application/json"
        }
        url = f"https://api.abuseipdb.com/api/v2/check?ipAddress={ip}"
        r = requests.get(url, headers=headers)
        data = r.json()
        score = data.get("data", {}).get("abuseConfidenceScore", "N/A")
        print(f"üõ°Ô∏è AbuseIPDB Score: {score}")
    except Exception as e:
        print(f"‚ùå Blocklist check failed: {e}")

def check_nameservers():
    try:
        socket.gethostbyname("a1.share-dns.com")
        print("‚úÖ NS a1.share-dns.com is reachable")
    except:
        print("‚ùå NS a1.share-dns.com is unreachable")

def list_cloudflare_dns():
    try:
        print("üåê Fetching DNS from Cloudflare")
        headers = {
            "Authorization": f"Bearer {CF_API_TOKEN}",
            "Content-Type": "application/json"
        }
        url = f"https://api.cloudflare.com/client/v4/zones/{CF_ZONE_ID}/dns_records"
        r = requests.get(url, headers=headers)
        for record in r.json().get("result", []):
            print(f"{record['type']} {record['name']} ‚ûù {record['content']}")
    except Exception as e:
        print(f"‚ùå Cloudflare DNS fetch failed: {e}")

if __name__ == "__main__":
    check_blocklists()
    check_nameservers()
    list_cloudflare_dns()
